name: Snowflake Data Tests

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    environment: DEV 

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Install snowsql
      run: |
        curl -O https://sfc-repo.snowflakecomputing.com/snowsql/bootstrap/1.2/linux_x86_64/snowsql-1.2.9-linux_x86_64.bash
        SNOWSQL_DEST=~/bin SNOWSQL_LOGIN_SHELL=~/.profile bash snowsql-1.2.9-linux_x86_64.bash

    - name: Version
      run: |
        ~/bin/snowsql --bootstrap-version
          
    - name: Run Snowflake data tests
      env:
        SNOWSQL_PWD: ${{ secrets.SF_PASSWORD }}
        SNOWSQL_ACCOUNT: ${{ secrets.SF_ACCOUNT }}
        SNOWSQL_USER: ${{ secrets.SF_USERNAME }}
        SNOWSQL_DATABASE: ${{ secrets.SF_DATABASE }}
        SNOWSQL_SCHEMA: ${{ secrets.SF_SCHEMA }}
        SNOWSQL_ROLE: ${{ secrets.SF_ROLE }}
        SNOWSQL_WAREHOUSE: ${{ secrets.SF_WAREHOUSE }}
      run: |
        ~/bin/snowsql -q "SELECT 'Running tests...';"
        ~/bin/snowsql -f data_tests.sql > test_results.txt
        # snowsql -a $SNOWFLAKE_ACCOUNT -u $SNOWFLAKE_USER -p $SNOWFLAKE_PASSWORD -w $SNOWFLAKE_WAREHOUSE -d $SNOWFLAKE_DATABASE -s $SNOWFLAKE_SCHEMA -q "SELECT 'Running tests...';"
        # snowsql -a $SNOWFLAKE_ACCOUNT -u $SNOWFLAKE_USER -p $SNOWFLAKE_PASSWORD -w $SNOWFLAKE_WAREHOUSE -d $SNOWFLAKE_DATABASE -s $SNOWFLAKE_SCHEMA -f path/to/data_tests.sql --output-format=csv > test_results.csv
        
    - name: Print test results
      run: cat test_results.txt
      
    - name: Check test results
      run: |
        echo "Checking for COLUMN_NULL_COUNT value..."
        if grep -q '|                 1 |' test_results.txt; then
          echo "Test for COLUMN_NULL_COUNT passed.";
        else
          echo "Test for COLUMN_NULL_COUNT failed.";
          exit 1;
        fi

        echo "Checking for NEGATIVE_METRIC_COUNT value..."
        if grep -q '|                 0 |' test_results.txt; then
          echo "Test for NEGATIVE_METRIC_COUNT passed.";
        else
          echo "Test for NEGATIVE_METRIC_COUNT failed.";
          echo "Details:";
          grep '| NEGATIVE_METRIC_COUNT |' test_results.txt || echo "No match found for '| NEGATIVE_METRIC_COUNT |'"
          exit 1;
        fi
        
        # if grep -q 'negative_metric_count,0' test_results.txt; then
        #   echo "Test for negative_metric_count passed.";
        # else
        #   echo "Test for negative_metric_count failed.";
        #   exit 1;
        # fi
