name: Deploy Environment

on:
  workflow_call:

    inputs:
      environment:
        type: string
        required: true
        description: "environment deployment"


jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }} 
    env:
      SNOWSQL_PWD: ${{ secrets.SF_PASSWORD }}
      SNOWSQL_ACCOUNT: ${{ secrets.SF_ACCOUNT }}
      SNOWSQL_USER: ${{ secrets.SF_USERNAME }}
      SNOWSQL_DATABASE: ${{ secrets.SF_DATABASE }}
      SNOWSQL_SCHEMA: ${{ secrets.SF_SCHEMA }}
      SNOWSQL_ROLE: ${{ secrets.SF_ROLE }}
      SNOWSQL_WAREHOUSE: ${{ secrets.SF_WAREHOUSE }}
      SQL_DIRS: 'dbscripts views'
      # SQL_FOLDER: 'dbscripts'
      
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
     
    # - name: List SQL Files
    #   run: |
    #     echo "Listinng SQL Files in $SQL_FOLDER"
    #     ls $SQL_FOLDER

    - name: Check if SQL Files exist
      run: |
        for dir in $SQL_DIRS; do
        echo "SQL Files in $SQL_DIRS"
        find $dir -name '*.sql' -exec 
        echo {} \;
        done
    
    - name: cwd
      run: |
        pwd
        ls

    - name: Concatenate SQL Files
      run: |
        > combined.sql
        for dir in $SQL_DIRS; do
        find $dir -name '*.sql' 
        -exec cat {} + >> combined.sql
        done
        echo "Contents of combined.sql"
        cat combined.sql
        
    # - name: Concatenate SQL Files
    #   run: |
    #     cat $SQL_FOLDER/*.sql > combined.sql

    - name: Replace placeholders in SQL template
      run: |
        # Replace placeholders with environment-specific values
        sed -i "s/%DBNAME%/${{ secrets.DBNAME }}/g" combined.sql
        
    # - name: Replace placeholders in SQL template
    #   run: |
    #     # Replace placeholders with environment-specific values
    #     # sed -i "s/%DBNAME%/${{ secrets.DBNAME }}/g" $SQL_FOLDER/*.sql
    #     for file in $SQL_FOLDER/*.sql;
    #      do
    #       echo "Processing $file"
    #       sed -i "s/%DBNAME%/${{ secrets.DBNAME }}/g" "$file"
    #      done        

    # - name: Upload artifact file
    #   uses: actions/upload-artifact@v2
    #   with:
    #     name: modified_file
    #     path: $SQL_FOLDER

    - name: Install SnowSQL
      run: |
          curl -O https://sfc-repo.snowflakecomputing.com/snowsql/bootstrap/1.2/linux_x86_64/snowsql-1.2.9-linux_x86_64.bash
          SNOWSQL_DEST=~/bin SNOWSQL_LOGIN_SHELL=~/.profile bash snowsql-1.2.9-linux_x86_64.bash
          
    - name: Version
      run: |
          ~/bin/snowsql --bootstrap-version
          
          
    - name: Print Environment Variables
      run: |
        echo "SNOWSQL_ACCOUNT: $SNOWSQL_ACCOUNT"
        echo "SNOWSQL_USER: $SNOWSQL_USER"
        echo "SNOWSQL_DATABASE: $SNOWSQL_DATABASE"
        echo "SNOWSQL_PWD: $SNOWSQL_PWD"
        

    - name: Deploy SQL to Snowflake
      run: |     
        ~/bin/snowsql -f combined.sql
        

    # - name: Deploy SQL to Snowflake
    #   run: |     
    #     ~/bin/snowsql -a ${{ secrets.SF_ACCOUNT }}  -u ${{ secrets.SF_USERNAME }} -p ${{ secrets.SF_PASSWORD }} -f combined.sql

    # - name: Deploy SQL to Snowflake
    #   run: |     
    #     ~/bin/snowsql -a "$SNOWSQL_ACCOUNT" -u "$SNOWSQL_USER" -p "$SNOWSQL_PWD" -f dbscripts/AlterScript.sql

    # - name: Deploy SQL to Snowflake
    #   run: |     
    #     ~/bin/snowsql -a "vi02661.central-india.azure" -u "swateesingh19" -p "Samaira25$" -f dbscripts/AlterScript.sql
        
    # - name: Deploy SQL to Snowflake
    #   run: |
    #       ~/bin/snowsql -q 'CREATE OR REPLACE PROCEDURE  MYPROC(message STRING)
    #                                     RETURNS STRING
    #                                     LANGUAGE PYTHON
    #                                     RUNTIME_VERSION = '\''3.8'\''
    #                                     PACKAGES = ('')
    #                                     IMPORTS = ('\''@~/${{ github.ref_name }}/storedproc.py'\'')
    #                                     HANDLER = '\''storedproc.run'\'';' -o friendly=false
